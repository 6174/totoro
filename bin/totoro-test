#!/usr/bin/env node

var fs = require('fs')
var commander = require('commander')
var async = require('async')
var path = require('path')
require('colorful').colorful()

var program = require('../lib/utils/program')

var pkgStr = fs.readFileSync(path.join(module.filename, '../../package.json'))
var pkg = JSON.parse(pkgStr)

commander.helpInformation = function() {
    return [
        '',
        '  A simple, easy-to-use and stable front-end unit testing tool'.to.bold.color,
        '',
        '  Usage: ' + this._name + ' ' + this.usage(),
        '' + this.commandHelp(),
        '  Options:',
        '',
        '' + this.optionHelp().replace(/^/gm, '    '),
        '',
        ''
    ].join('\n')
}

commander
    .version(pkg.version)
    .usage('[options]')

commander
    .option('-v, --verbose', 'show debug log')
    .option('--runner [s]', 'runner path [auto]')
    .option('--platforms [s]', 'specify platforms to run test [*]')
    .option('--adapter [s]', 'specify report adapter [auto]')
    .option('--timeout [n]', 'client timeout [5]')
    .option('--server', 'launch the server')
    .option('--serverHost [s]', 'specify server host [10.15.52.87]')
    .option('--serverPort [n]', 'specify server port [9999]')
    .option('--list', 'view available platforms')


commander.on('--help', function() {
    console.log()
    console.log('  ' + 'Examples:'.to.bold.blue.color)
    console.log()
    console.log('   1. the simplest usage')
    console.log()
    console.log('   $ ' + 'totoro-test'.to.magenta.color)
    console.log()
    console.log('   2. test specified runner')
    console.log()
    console.log('   $ ' + 'totoro-test '.to.magenta.color + ' ' + '--runner'.to.cyan.color + ' path/to/runner.html')
    console.log()
    console.log('   3. view available platforms')
    console.log()
    console.log('   $ ' + 'totoro-test '.to.magenta.color + ' ' + '--list'.to.cyan.color)
    console.log()

    console.log('   For more information: ' + 'https://github.com/totorojs/totoro-test/wiki'.to.underline.color)
    console.log()
});


commander.parse(process.argv)

require('../lib/actions/actions')(commander)
